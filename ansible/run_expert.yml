- name: Run expert script and Go server on expert node
  hosts: expert_node
  become: yes
  tasks:
    - name: Ensure destination directory exists
      file:
        path: /l2h
        state: directory

    - name: Clone Git repository on remote node (specific branch, force clean)
      git:
        repo: https://gitlab.orbit-lab.org/r3-25/l2h
        dest: /l2h
        version: l2h_fin
        clone: yes
        update: yes
        force: yes

    - name: Update apt cache (tolerant)
      shell: apt-get update || true
      args: { executable: /bin/bash }

    - name: Install Go
      apt:
        name: golang-go
        state: present
        update_cache: no

    - name: Kill anything on 6000/7000
      shell: |
        fuser -k 6000/tcp || true
        fuser -k 7000/tcp || true
      ignore_errors: true

    - name: Start Go proxy (background)
      shell: |
        cd /l2h/CIFAR10L2H
        nohup bash -lc 'go run multithread.go' > go_output.log 2>&1 &
      args: { executable: /bin/bash }

    - name: Start Python expert (background)
      shell: >
        bash -lc 'source /root/pytorch/bin/activate &&
                  cd /l2h/CIFAR10L2H &&
                  nohup python3 -u run_expert.py > expert_output.log 2>&1 &'

    # NEW: Wait for ports to be open
    - name: Wait for Go proxy on 7000
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 7000
        state: started
        timeout: 60

    - name: Wait for Python expert on 6000
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 6000
        state: started
        timeout: 60

    # Optional: fetch logs later when the run is done; comment these out here
    # and fetch after controller completes.

